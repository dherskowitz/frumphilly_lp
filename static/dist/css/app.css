/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
     ========================================================================== */

/**
   * Remove the margin in all browsers.
   */

body {
  margin: 0;
}

/**
   * Render the `main` element consistently in IE.
   */

main {
  display: block;
}

/**
   * Correct the font size and margin on `h1` elements within `section` and
   * `article` contexts in Chrome, Firefox, and Safari.
   */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
     ========================================================================== */

/**
   * 1. Add the correct box sizing in Firefox.
   * 2. Show the overflow in Edge and IE.
   */

hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
     ========================================================================== */

/**
   * Remove the gray background on active links in IE 10.
   */

a {
  background-color: transparent;
}

/**
   * 1. Remove the bottom border in Chrome 57-
   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
   */

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
   * Add the correct font weight in Chrome, Edge, and Safari.
   */

b,
strong {
  font-weight: bolder;
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
   * Add the correct font size in all browsers.
   */

small {
  font-size: 80%;
}

/**
   * Prevent `sub` and `sup` elements from affecting the line height in
   * all browsers.
   */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
     ========================================================================== */

/**
   * Remove the border on images inside links in IE 10.
   */

img {
  border-style: none;
}

/* Forms
     ========================================================================== */

/**
   * 1. Change the font styles in all browsers.
   * 2. Remove the margin in Firefox and Safari.
   */

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
   * Show the overflow in IE.
   * 1. Show the overflow in Edge.
   */

button,
input {
  /* 1 */
  overflow: visible;
}

/**
   * Remove the inheritance of text transform in Edge, Firefox, and IE.
   * 1. Remove the inheritance of text transform in Firefox.
   */

button,
select {
  /* 1 */
  text-transform: none;
}

/**
   * Correct the inability to style clickable types in iOS and Safari.
   */

button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
   * Remove the inner border and padding in Firefox.
   */

button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
   * Restore the focus styles unset by the previous rule.
   */

button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
   * Correct the padding in Firefox.
   */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
   * 1. Correct the text wrapping in Edge and IE.
   * 2. Correct the color inheritance from `fieldset` elements in IE.
   * 3. Remove the padding so developers are not caught out when they zero out
   *    `fieldset` elements in all browsers.
   */

legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
   * Add the correct vertical alignment in Chrome, Firefox, and Opera.
   */

progress {
  vertical-align: baseline;
}

/**
   * Remove the default vertical scrollbar in IE 10+.
   */

textarea {
  overflow: auto;
}

/**
   * 1. Add the correct box sizing in IE 10.
   * 2. Remove the padding in IE 10.
   */

[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
   * Correct the cursor style of increment and decrement buttons in Chrome.
   */

[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
   * 1. Correct the odd appearance in Chrome and Safari.
   * 2. Correct the outline style in Safari.
   */

[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
   * Remove the inner padding in Chrome and Safari on macOS.
   */

[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
   * 1. Correct the inability to style clickable types in iOS and Safari.
   * 2. Change font properties to `inherit` in Safari.
   */

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
     ========================================================================== */

/*
   * Add the correct display in Edge, IE 10+, and Firefox.
   */

details {
  display: block;
}

/*
   * Add the correct display in all browsers.
   */

summary {
  display: list-item;
}

/* Misc
     ========================================================================== */

/**
   * Add the correct display in IE 10+.
   */

template {
  display: none;
}

/**
   * Add the correct display in IE 10.
   */

[hidden] {
  display: none;
}

@font-face {
  font-family: "Bauhaus93";
  src: url("/static/dist/fonts/Bauhaus93/Bauhaus93.eot");
  src: url("/static/dist/fonts/Bauhaus93/Bauhaus93.eot?#iefix") format("embedded-opentype"), url("/static/dist/fonts/Bauhaus93/Bauhaus93.woff") format("woff"), url("/static/dist/fonts/Bauhaus93/Bauhaus93.ttf") format("truetype"), url("/static/dist/fonts/Bauhaus93/Bauhaus93.svg#svgFontName") format("svg");
}

@font-face {
  font-family: "OpenSans";
  src: url("/static/dist/fonts/OpenSans/OpenSans-Regular.ttf") format("truetype");
}

body {
  font-size: 16px;
  font-family: "OpenSans", sans-serif;
  color: #fff;
}

img {
  max-width: 100%;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
}

::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
  color: #000;
  font-family: "Bauhaus93", sans-serif;
}

::-moz-placeholder {
  /* Firefox 19+ */
  color: #000;
  font-family: "Bauhaus93", sans-serif;
}

:-ms-input-placeholder {
  /* IE 10+ */
  color: #000;
  font-family: "Bauhaus93", sans-serif;
}

:-moz-placeholder {
  /* Firefox 18- */
  color: #000;
  font-family: "Bauhaus93", sans-serif;
}

a {
  text-decoration: none;
  color: #000;
}

.bauhaus {
  font-family: "Bauhaus93", sans-serif;
}

.marker {
  font-family: "Baloo Bhai", cursive;
}

.capitalize {
  text-transform: capitalize;
}

.center-text {
  text-align: center;
}

#home {
  height: 80vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 0 5em;
}

#home .home__logo {
  width: 50em;
  pointer-events: none;
}

#home h1 {
  font-size: 5em;
  margin: 0;
  padding-left: 0.2em;
  text-shadow: 3px 8px 8px #000;
}

.ctaOne__question {
  font-size: 4em;
  background: #674172;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1em 0;
}

.ctaOne__answer {
  color: #000;
  font-family: "OpenSans", sans-serif;
  font-size: 1.7em;
  width: 30em;
  max-width: 100%;
  text-align: center;
  margin: 0px auto;
  padding: 2em;
}

#ctaTwo {
  background-color: #ECECEC;
}

.ctaTwo__question {
  background-color: #D64541;
  font-size: 4em;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1em 0;
}

.ctaTwo__answers {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(20em, 30em));
  padding: 2em;
  grid-gap: 2em;
  justify-content: center;
  max-width: 1920px;
  margin: 0 auto;
}

@media (max-width: 1600px) {
  .ctaTwo__answers {
    grid-template-columns: repeat(auto-fill, minmax(15em, 25em));
  }
}

@media (max-width: 1400px) {
  .ctaTwo__answers {
    grid-template-columns: repeat(auto-fill, minmax(10em, 20em));
  }
}

@media (max-width: 768px) {
  .ctaTwo__answers {
    grid-template-columns: repeat(1, 1fr);
  }
}

.ctaTwo__answers__box {
  color: #000;
  background: #fff;
  padding: 1em;
  box-shadow: 0px 2px 6px 0px #67809f;
}

#contact {
  padding: 4em 2em;
  background-color: #00B5CC;
  display: flex;
  justify-content: center;
  position: relative;
}

#contact #contact-wrapper {
  margin: 0 7em;
}

#contact #error_notice {
  color: #D64541;
  display: none;
}

#contact #error_notice.show {
  display: block;
}

#contact #contact-overlay {
  display: none;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 9;
  background-color: rgba(0, 181, 204, 0.9);
  color: #000;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: 3em;
  text-align: center;
}

#contact #contact-overlay.show {
  display: flex;
}

#contact #contact-overlay #contact-overlay__title {
  margin: 0;
  margin-bottom: 0.5em;
}

#contact #contact-overlay #contact-overlay__loader {
  width: 1.5em;
}

#upcoming_events_container {
  background-color: #ECECEC;
}

#upcoming_events {
  font-family: "OpenSans", sans-serif;
  color: #000;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(20em, 30em));
  padding: 2em;
  grid-gap: 2em;
  justify-content: center;
  max-width: 1920px;
  margin: 0 auto;
  display: flex;
  flex-wrap: wrap;
}

@media (max-width: 1600px) {
  #upcoming_events {
    grid-template-columns: repeat(auto-fill, minmax(15em, 25em));
  }
}

@media (max-width: 1400px) {
  #upcoming_events {
    grid-template-columns: repeat(auto-fill, minmax(10em, 20em));
  }
}

@media (max-width: 1100px) {
  #upcoming_events {
    grid-template-columns: repeat(auto-fill, minmax(15em, 25em));
  }
}

.upcoming_events__event {
  background: #fff;
  padding: 1em;
  box-shadow: 0px 2px 6px 0px #67809f;
  width: 25em;
  margin: 1em;
}

@media (max-width: 1100px) {
  .upcoming_events__event:last-of-type {
    grid-column: span 2;
  }
}

@media (max-width: 991px) {
  .upcoming_events__event {
    grid-column: span 2;
  }
}

#upcoming_events__title {
  background: #1ba39c;
  font-size: 4em;
  padding: 1em 0;
}

#upcoming_events__title h1 {
  margin: 0;
}

.event_link {
  text-decoration: underline;
  color: #00B5CC;
}

.event_rsvp {
  display: flex;
  align-items: center;
}

.event_rsvp__icon {
  margin-left: 1em;
}

.contact__title {
  font-size: 5em;
  margin: 0;
}

.contact__subtitle {
  font-family: "OpenSans", sans-serif;
  font-size: 2em;
  margin: 0;
  margin-bottom: 1em;
}

.form-input {
  display: block;
  padding: 0.5em 1em;
  width: 40em;
  max-width: 100%;
  font-size: 1.2em;
  font-family: "Bauhaus93", sans-serif;
  border: 3px solid transparent;
  border-radius: 2em;
  margin: 1em 0;
}

.form-input:focus {
  background: rgba(255, 255, 255, 0.7);
  border: 3px solid #fff;
}

.form-submit {
  font-family: "Bauhaus93", sans-serif;
  padding: 0.2em 3em;
  border: 3px solid #fff;
  background: #013243;
  border-radius: 2em;
  color: #fff;
  font-size: 1.7em;
  cursor: pointer;
  font-weight: bold;
}

.form-submit:hover {
  background: #025875;
}

.footer__logo {
  display: flex;
  margin: 2em auto;
}

.footer__copyright {
  text-align: center;
  background: #ECECEC;
  color: #000;
  padding: 1em 0;
}

@media (max-width: 925px) {
  .ctaOne__answer {
    font-size: 1em;
  }

  #home {
    padding: 0 1em;
  }

  h1 {
    font-size: 1em;
  }

  .contact__title,
  .contact__subtitle {
    text-align: center;
  }

  .contact__title {
    font-size: 3em;
  }

  .contact__subtitle {
    font-size: 2em;
  }

  .form-input {
    width: 20em;
    margin: 0 auto 1em;
  }

  .form-submit {
    display: flex;
    margin: 0 auto;
  }
}

@media (max-width: 575px) {
  #home {
    height: 50vh;
  }

  #home h1 {
    font-size: 4em;
  }

  .form-input {
    width: 80vw;
    margin: 0 auto 1em;
  }

  .contact__title {
    font-size: 2em;
  }

  .contact__subtitle {
    font-size: 1.5em;
  }

  .ctaOne__answer {
    width: inherit;
  }
}

@media (max-width: 360px) {
  #home h1 {
    font-size: 3em;
  }
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/